package cn.chestnut.mvvm.teamworker.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import cn.chestnut.mvvm.teamworker.model.Message;
import cn.chestnut.mvvm.teamworker.model.MessageUser;
import cn.chestnut.mvvm.teamworker.model.NewFriendRequest;
import cn.chestnut.mvvm.teamworker.model.Chat;
import cn.chestnut.mvvm.teamworker.model.ChatMessage;
import cn.chestnut.mvvm.teamworker.model.User;
import cn.chestnut.mvvm.teamworker.model.UserInfo;

import cn.chestnut.mvvm.teamworker.db.MessageDao;
import cn.chestnut.mvvm.teamworker.db.MessageUserDao;
import cn.chestnut.mvvm.teamworker.db.NewFriendRequestDao;
import cn.chestnut.mvvm.teamworker.db.ChatDao;
import cn.chestnut.mvvm.teamworker.db.ChatMessageDao;
import cn.chestnut.mvvm.teamworker.db.UserDao;
import cn.chestnut.mvvm.teamworker.db.UserInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig messageDaoConfig;
    private final DaoConfig messageUserDaoConfig;
    private final DaoConfig newFriendRequestDaoConfig;
    private final DaoConfig chatDaoConfig;
    private final DaoConfig chatMessageDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig userInfoDaoConfig;

    private final MessageDao messageDao;
    private final MessageUserDao messageUserDao;
    private final NewFriendRequestDao newFriendRequestDao;
    private final ChatDao chatDao;
    private final ChatMessageDao chatMessageDao;
    private final UserDao userDao;
    private final UserInfoDao userInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        messageDaoConfig = daoConfigMap.get(MessageDao.class).clone();
        messageDaoConfig.initIdentityScope(type);

        messageUserDaoConfig = daoConfigMap.get(MessageUserDao.class).clone();
        messageUserDaoConfig.initIdentityScope(type);

        newFriendRequestDaoConfig = daoConfigMap.get(NewFriendRequestDao.class).clone();
        newFriendRequestDaoConfig.initIdentityScope(type);

        chatDaoConfig = daoConfigMap.get(ChatDao.class).clone();
        chatDaoConfig.initIdentityScope(type);

        chatMessageDaoConfig = daoConfigMap.get(ChatMessageDao.class).clone();
        chatMessageDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        messageDao = new MessageDao(messageDaoConfig, this);
        messageUserDao = new MessageUserDao(messageUserDaoConfig, this);
        newFriendRequestDao = new NewFriendRequestDao(newFriendRequestDaoConfig, this);
        chatDao = new ChatDao(chatDaoConfig, this);
        chatMessageDao = new ChatMessageDao(chatMessageDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);

        registerDao(Message.class, messageDao);
        registerDao(MessageUser.class, messageUserDao);
        registerDao(NewFriendRequest.class, newFriendRequestDao);
        registerDao(Chat.class, chatDao);
        registerDao(ChatMessage.class, chatMessageDao);
        registerDao(User.class, userDao);
        registerDao(UserInfo.class, userInfoDao);
    }
    
    public void clear() {
        messageDaoConfig.clearIdentityScope();
        messageUserDaoConfig.clearIdentityScope();
        newFriendRequestDaoConfig.clearIdentityScope();
        chatDaoConfig.clearIdentityScope();
        chatMessageDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        userInfoDaoConfig.clearIdentityScope();
    }

    public MessageDao getMessageDao() {
        return messageDao;
    }

    public MessageUserDao getMessageUserDao() {
        return messageUserDao;
    }

    public NewFriendRequestDao getNewFriendRequestDao() {
        return newFriendRequestDao;
    }

    public ChatDao getChatDao() {
        return chatDao;
    }

    public ChatMessageDao getChatMessageDao() {
        return chatMessageDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

}
